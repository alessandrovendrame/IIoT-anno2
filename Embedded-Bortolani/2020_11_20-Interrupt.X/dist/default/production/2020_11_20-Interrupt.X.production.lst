

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Nov 20 12:53:30 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F628A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001F                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  0086                     	;# 
    78  008C                     	;# 
    79  008E                     	;# 
    80  0092                     	;# 
    81  0098                     	;# 
    82  0099                     	;# 
    83  009A                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009F                     	;# 
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  008C                     	;# 
   116  008E                     	;# 
   117  0092                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009F                     	;# 
   125                           
   126                           	psect	idataCOMMON
   127  00B6                     __pidataCOMMON:
   128                           
   129                           ;initializer for _tempo
   130  00B6  340F               	retlw	15
   131  00B7  3400               	retlw	0
   132  0005                     _PORTA	set	5
   133  0006                     _PORTB	set	6
   134  000B                     _INTCON	set	11
   135  0085                     _TRISA	set	133
   136  0086                     _TRISB	set	134
   137  0081                     _OPTION_REG	set	129
   138                           
   139                           	psect	cinit
   140  000B                     start_initialization:	
   141                           ; #config settings
   142                           
   143  000B                     __initialization:
   144                           
   145                           ; Initialize objects allocated to COMMON
   146  000B  20B6               	fcall	__pidataCOMMON	;fetch initializer
   147  000C  00F7               	movwf	__pdataCOMMON& (0+127)
   148  000D  20B7               	fcall	__pidataCOMMON+1	;fetch initializer
   149  000E  00F8               	movwf	(__pdataCOMMON+1)& (0+127)
   150                           
   151                           ; Clear objects allocated to BANK0
   152  000F  01A4               	clrf	__pbssBANK0& (0+127)
   153  0010  01A5               	clrf	(__pbssBANK0+1)& (0+127)
   154                           
   155                           ; Clear objects allocated to COMMON
   156  0011  01F5               	clrf	__pbssCOMMON& (0+127)
   157  0012  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   158  0013                     end_of_initialization:	
   159                           ;End of C runtime variable initialization code
   160                           
   161  0013                     __end_of__initialization:
   162  0013  0183               	clrf	3
   163  0014  2815               	ljmp	_main	;jump to C main() function
   164                           
   165                           	psect	bssCOMMON
   166  0075                     __pbssCOMMON:
   167  0075                     _count:
   168  0075                     	ds	2
   169                           
   170                           	psect	dataCOMMON
   171  0077                     __pdataCOMMON:
   172  0077                     _tempo:
   173  0077                     	ds	2
   174                           
   175                           	psect	bssBANK0
   176  0024                     __pbssBANK0:
   177  0024                     _gameChoose:
   178  0024                     	ds	2
   179                           
   180                           	psect	cstackCOMMON
   181  0070                     __pcstackCOMMON:
   182  0070                     ?_main:
   183  0070                     ?_lampeggio:	
   184                           ; 1 bytes @ 0x0
   185                           
   186  0070                     ??_lampeggio:	
   187                           ; 1 bytes @ 0x0
   188                           
   189                           
   190                           ; 1 bytes @ 0x0
   191  0070                     	ds	3
   192  0073                     ??_main:
   193                           
   194                           ; 1 bytes @ 0x3
   195  0073                     	ds	2
   196                           
   197                           	psect	cstackBANK0
   198  0020                     __pcstackBANK0:
   199  0020                     main@oldButton:
   200                           
   201                           ; 2 bytes @ 0x0
   202  0020                     	ds	2
   203  0022                     main@button:
   204                           
   205                           ; 2 bytes @ 0x2
   206  0022                     	ds	2
   207                           
   208                           	psect	maintext
   209  0015                     __pmaintext:	
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 32 in file "main.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;  button          2    2[BANK0 ] int 
   220 ;;  oldButton       2    0[BANK0 ] int 
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, status,2, status,0, btemp+1
   225 ;; Tracked objects:
   226 ;;		On entry : B00/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   230 ;;      Params:         0       0       0       0
   231 ;;      Locals:         0       4       0       0
   232 ;;      Temps:          2       0       0       0
   233 ;;      Totals:         2       4       0       0
   234 ;;Total ram usage:        6 bytes
   235 ;; Hardware stack levels required when called:    1
   236 ;; This function calls:
   237 ;;		Nothing
   238 ;; This function is called by:
   239 ;;		Startup code after reset
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243                           
   244                           ;psect for function _main
   245  0015                     _main:
   246  0015                     l702:	
   247                           ;incstack = 0
   248                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   249                           
   250  0015  30A0               	movlw	160
   251  0016  008B               	movwf	11	;volatile
   252  0017  3007               	movlw	7
   253  0018  1683               	bsf	3,5	;RP0=1, select bank1
   254  0019  1303               	bcf	3,6	;RP1=0, select bank1
   255  001A  0081               	movwf	1	;volatile
   256  001B                     l704:
   257  001B  0186               	clrf	6	;volatile
   258  001C                     l706:
   259  001C  30FF               	movlw	255
   260  001D  1283               	bcf	3,5	;RP0=0, select bank0
   261  001E  1303               	bcf	3,6	;RP1=0, select bank0
   262  001F  0086               	movwf	6	;volatile
   263  0020                     l708:
   264  0020  3004               	movlw	4
   265  0021  1683               	bsf	3,5	;RP0=1, select bank1
   266  0022  1303               	bcf	3,6	;RP1=0, select bank1
   267  0023  0085               	movwf	5	;volatile
   268  0024                     l710:
   269  0024  01F5               	clrf	_count
   270  0025  01F6               	clrf	_count+1
   271  0026                     l25:
   272  0026  1283               	bcf	3,5	;RP0=0, select bank0
   273  0027  1D05               	btfss	5,2	;volatile
   274  0028  282A               	goto	u211
   275  0029  282C               	goto	u210
   276  002A                     u211:
   277  002A  3001               	movlw	1
   278  002B  282D               	goto	u220
   279  002C                     u210:
   280  002C  3000               	movlw	0
   281  002D                     u220:
   282  002D  00F3               	movwf	??_main
   283  002E  01F4               	clrf	??_main+1
   284  002F  0873               	movf	??_main,w
   285  0030  00A2               	movwf	main@button
   286  0031  0874               	movf	??_main+1,w
   287  0032  00A3               	movwf	main@button+1
   288  0033                     l712:
   289  0033  0322               	decf	main@button,w
   290  0034  0423               	iorwf	main@button+1,w
   291  0035  1D03               	btfss	3,2
   292  0036  2838               	goto	u231
   293  0037  2839               	goto	u230
   294  0038                     u231:
   295  0038  2887               	goto	l730
   296  0039                     u230:
   297  0039                     l714:
   298  0039  0820               	movf	main@oldButton,w
   299  003A  0421               	iorwf	main@oldButton+1,w
   300  003B  1D03               	btfss	3,2
   301  003C  283E               	goto	u241
   302  003D  283F               	goto	u240
   303  003E                     u241:
   304  003E  2887               	goto	l730
   305  003F                     u240:
   306  003F                     l716:
   307  003F  3034               	movlw	52
   308  0040  00F4               	movwf	??_main+1
   309  0041  30F1               	movlw	241
   310  0042  00F3               	movwf	??_main
   311  0043                     u307:
   312  0043  0BF3               	decfsz	??_main,f
   313  0044  2843               	goto	u307
   314  0045  0BF4               	decfsz	??_main+1,f
   315  0046  2843               	goto	u307
   316  0047  2848               	nop2
   317  0048  1283               	bcf	3,5	;RP0=0, select bank0
   318  0049  1303               	bcf	3,6	;RP1=0, select bank0
   319  004A  1D05               	btfss	5,2	;volatile
   320  004B  284D               	goto	u251
   321  004C  284F               	goto	u250
   322  004D                     u251:
   323  004D  3001               	movlw	1
   324  004E  2850               	goto	u260
   325  004F                     u250:
   326  004F  3000               	movlw	0
   327  0050                     u260:
   328  0050  00F3               	movwf	??_main
   329  0051  01F4               	clrf	??_main+1
   330  0052  0873               	movf	??_main,w
   331  0053  00A2               	movwf	main@button
   332  0054  0874               	movf	??_main+1,w
   333  0055  00A3               	movwf	main@button+1
   334  0056                     l718:
   335  0056  0322               	decf	main@button,w
   336  0057  0423               	iorwf	main@button+1,w
   337  0058  1D03               	btfss	3,2
   338  0059  285B               	goto	u271
   339  005A  285C               	goto	u270
   340  005B                     u271:
   341  005B  2887               	goto	l730
   342  005C                     u270:
   343  005C                     l720:
   344  005C  0820               	movf	main@oldButton,w
   345  005D  0421               	iorwf	main@oldButton+1,w
   346  005E  1D03               	btfss	3,2
   347  005F  2861               	goto	u281
   348  0060  2862               	goto	u280
   349  0061                     u281:
   350  0061  2887               	goto	l730
   351  0062                     u280:
   352  0062                     l722:
   353  0062  3001               	movlw	1
   354  0063  07A4               	addwf	_gameChoose,f
   355  0064  1803               	skipnc
   356  0065  0AA5               	incf	_gameChoose+1,f
   357  0066  3000               	movlw	0
   358  0067  07A5               	addwf	_gameChoose+1,f
   359  0068  0878               	movf	_tempo+1,w
   360  0069  00F4               	movwf	??_main+1
   361  006A  0877               	movf	_tempo,w
   362  006B  00F3               	movwf	??_main
   363  006C  0873               	movf	??_main,w
   364  006D  07F7               	addwf	_tempo,f
   365  006E  1803               	skipnc
   366  006F  0AF8               	incf	_tempo+1,f
   367  0070  0874               	movf	??_main+1,w
   368  0071  07F8               	addwf	_tempo+1,f
   369  0072                     l724:
   370  0072  0825               	movf	_gameChoose+1,w
   371  0073  3A80               	xorlw	128
   372  0074  00FF               	movwf	btemp+1
   373  0075  3080               	movlw	128
   374  0076  027F               	subwf	btemp+1,w
   375  0077  1D03               	skipz
   376  0078  287B               	goto	u295
   377  0079  3004               	movlw	4
   378  007A  0224               	subwf	_gameChoose,w
   379  007B                     u295:
   380  007B  1C03               	skipc
   381  007C  287E               	goto	u291
   382  007D  287F               	goto	u290
   383  007E                     u291:
   384  007E  2887               	goto	l730
   385  007F                     u290:
   386  007F                     l726:
   387  007F  1283               	bcf	3,5	;RP0=0, select bank0
   388  0080  1303               	bcf	3,6	;RP1=0, select bank0
   389  0081  01A4               	clrf	_gameChoose
   390  0082  01A5               	clrf	_gameChoose+1
   391  0083                     l728:
   392  0083  300F               	movlw	15
   393  0084  00F7               	movwf	_tempo
   394  0085  3000               	movlw	0
   395  0086  00F8               	movwf	_tempo+1
   396  0087                     l730:
   397  0087  1283               	bcf	3,5	;RP0=0, select bank0
   398  0088  1303               	bcf	3,6	;RP1=0, select bank0
   399  0089  0823               	movf	main@button+1,w
   400  008A  00A1               	movwf	main@oldButton+1
   401  008B  0822               	movf	main@button,w
   402  008C  00A0               	movwf	main@oldButton
   403  008D  2826               	goto	l25
   404  008E  280A               	ljmp	start
   405  008F                     __end_of_main:
   406                           
   407                           	psect	text1
   408  008F                     __ptext1:	
   409 ;; *************** function _lampeggio *****************
   410 ;; Defined at:
   411 ;;		line 64 in file "main.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		wreg, status,2
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   425 ;;      Params:         0       0       0       0
   426 ;;      Locals:         0       0       0       0
   427 ;;      Temps:          3       0       0       0
   428 ;;      Totals:         3       0       0       0
   429 ;;Total ram usage:        3 bytes
   430 ;; Hardware stack levels used:    1
   431 ;; This function calls:
   432 ;;		Nothing
   433 ;; This function is called by:
   434 ;;		Interrupt level 1
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           
   439                           ;psect for function _lampeggio
   440  008F                     _lampeggio:
   441  008F                     i1l660:
   442  008F  1D0B               	btfss	11,2	;volatile
   443  0090  2892               	goto	u10_21
   444  0091  2893               	goto	u10_20
   445  0092                     u10_21:
   446  0092  28AF               	goto	i1l38
   447  0093                     u10_20:
   448  0093                     i1l662:
   449  0093  3001               	movlw	1
   450  0094  07F5               	addwf	_count,f
   451  0095  1803               	skipnc
   452  0096  0AF6               	incf	_count+1,f
   453  0097  3000               	movlw	0
   454  0098  07F6               	addwf	_count+1,f
   455  0099  0878               	movf	_tempo+1,w
   456  009A  3A80               	xorlw	128
   457  009B  00F0               	movwf	??_lampeggio
   458  009C  0876               	movf	_count+1,w
   459  009D  3A80               	xorlw	128
   460  009E  0270               	subwf	??_lampeggio,w
   461  009F  1D03               	skipz
   462  00A0  28A3               	goto	u11_25
   463  00A1  0875               	movf	_count,w
   464  00A2  0277               	subwf	_tempo,w
   465  00A3                     u11_25:
   466  00A3  1803               	skipnc
   467  00A4  28A6               	goto	u11_21
   468  00A5  28A7               	goto	u11_20
   469  00A6                     u11_21:
   470  00A6  28AC               	goto	i1l668
   471  00A7                     u11_20:
   472  00A7                     i1l664:
   473  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   474  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   475  00A9  0986               	comf	6,f	;volatile
   476  00AA                     i1l666:
   477  00AA  01F5               	clrf	_count
   478  00AB  01F6               	clrf	_count+1
   479  00AC                     i1l668:
   480  00AC  080B               	movf	11,w	;volatile
   481  00AD  39FB               	andlw	251
   482  00AE  008B               	movwf	11	;volatile
   483  00AF                     i1l38:
   484  00AF  0872               	movf	??_lampeggio+2,w
   485  00B0  008A               	movwf	10
   486  00B1  0E71               	swapf	??_lampeggio+1,w
   487  00B2  0083               	movwf	3
   488  00B3  0EFE               	swapf	btemp,f
   489  00B4  0E7E               	swapf	btemp,w
   490  00B5  0009               	retfie
   491  00B6                     __end_of_lampeggio:
   492  007E                     btemp	set	126	;btemp
   493  007E                     wtemp0	set	126
   494                           
   495                           	psect	intentry
   496  0004                     __pintentry:	
   497                           ;incstack = 0
   498                           ; Regs used in _lampeggio: [wreg+status,2]
   499                           
   500  0004                     interrupt_function:
   501  007E                     saved_w	set	btemp
   502  0004  00FE               	movwf	btemp
   503  0005  0E03               	swapf	3,w
   504  0006  00F1               	movwf	??_lampeggio+1
   505  0007  080A               	movf	10,w
   506  0008  00F2               	movwf	??_lampeggio+2
   507  0009  288F               	ljmp	_lampeggio
   508                           
   509                           	psect	config
   510                           
   511                           ;Config register CONFIG @ 0x2007
   512                           ;	Oscillator Selection bits
   513                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   514                           ;	Watchdog Timer Enable bit
   515                           ;	WDTE = OFF, WDT disabled
   516                           ;	Power-up Timer Enable bit
   517                           ;	PWRTE = ON, PWRT enabled
   518                           ;	RA5/MCLR/VPP Pin Function Select bit
   519                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   520                           ;	Brown-out Detect Enable bit
   521                           ;	BOREN = ON, BOD enabled
   522                           ;	Low-Voltage Programming Enable bit
   523                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   524                           ;	Data EE Memory Code Protection bit
   525                           ;	CPD = OFF, Data memory code protection off
   526                           ;	Flash Program Memory Code Protection bit
   527                           ;	CP = OFF, Code protection off
   528  2007                     	org	8199
   529  2007  3F62               	dw	16226

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      4       6
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _lampeggio in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _lampeggio in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _lampeggio in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lampeggio in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     164
                                              3 COMMON     2     2      0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _lampeggio                                            3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _lampeggio (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      4       6       3        7.5%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       F      10        0.0%
ABS                  0      0       F       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Nov 20 12:53:30 2020

                     l25 0026                      l710 0024                      l702 0015  
                    l720 005C                      l712 0033                      l704 001B  
                    l722 0062                      l714 0039                      l730 0087  
                    l706 001C                      l724 0072                      l716 003F  
                    l708 0020                      l726 007F                      l718 0056  
                    l728 0083                      u210 002C                      u211 002A  
                    u220 002D                      u230 0039                      u231 0038  
                    u240 003F                      u241 003E                      u250 004F  
                    u251 004D                      u307 0043                      u260 0050  
                    u270 005C                      u271 005B                      u280 0062  
                    u281 0061                      u290 007F                      u291 007E  
                    u295 007B                     i1l38 00AF                     _main 0015  
                   btemp 007E                     start 000A                    ?_main 0070  
                  i1l660 008F                    i1l662 0093                    i1l664 00A7  
                  i1l666 00AA                    i1l668 00AC                    u10_20 0093  
                  u10_21 0092                    u11_20 00A7                    u11_21 00A6  
                  u11_25 00A3                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _count 0075  
                  _tempo 0077                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000B             __end_of_main 008F  
                 ??_main 0073                   _INTCON 000B            main@oldButton 0020  
           __pdataCOMMON 0077                   saved_w 007E  __end_of__initialization 0013  
         __pcstackCOMMON 0070               __pbssBANK0 0024       __size_of_lampeggio 0027  
             _gameChoose 0024               __pmaintext 0015               __pintentry 0004  
      __end_of_lampeggio 00B6                  __ptext1 008F     end_of_initialization 0013  
             main@button 0022            __pidataCOMMON 00B6      start_initialization 000B  
            __pbssCOMMON 0075                ___latbits 0000            __pcstackBANK0 0020  
              _lampeggio 008F        interrupt_function 0004               ?_lampeggio 0070  
          __size_of_main 007A              ??_lampeggio 0070                 intlevel1 0000  
             _OPTION_REG 0081  
